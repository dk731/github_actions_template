name: NodeJS with Webpack

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
  
    strategy:
      matrix:
        node_version: ['17.x']

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install NPM dependencies
        run: npm install

      - name: Build
        run: npm run build:prod
      
      - name: Project Information
        id: project_info
        uses: gregoranders/nodejs-project-info@v0.0.18
        
      - name: Creating new release
        id: create_release
        uses: gregoranders/nodejs-create-release@v0.0.18
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: v${{ steps.project_info.outputs.version }}
          name: ${{ steps.project_info.outputs.name }} - ${{ steps.project_info.outputs.version }} Release
          target: ${{ github.ref }}
          
      - name: Upload Release Asset
        id: upload_release_asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./build/artifact.zip
          asset_name: artifact.zip
          asset_content_type: application/zip
